<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxdinfo.salary.move.dao.MoveLogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jxdinfo.salary.move.model.MoveLog">
        <id column="OPERATION_ID" property="operationId" />
        <result column="OPERATION_TIME" property="operationTime" />
    </resultMap>

    <!-- 带关联查询映射结果 -->
    <resultMap id="WithRefResultMap" type="com.jxdinfo.salary.move.model.MoveLog" extends="BaseResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="operator" javaType="com.jxdinfo.salary.staff.model.Staff"
                     column="OPERATOR_ID" select="getOperatorById"/>
        <association property="move" javaType="com.jxdinfo.salary.staff.model.Staff"
                     column="MOVE_ID" select="getMoveById"/>
        <association property="oldDepartment" javaType="com.jxdinfo.salary.department.model.Department"
                     column="OLD_DEPARTMENT_ID" select="getOldDepartmentByDepartmentId"/>
        <association property="newDepartment" javaType="com.jxdinfo.salary.department.model.Department"
                     column="NEW_DEPARTMENT_ID" select="getNewDepartmentByDepartmentId"/>
        <association property="oldPosition" javaType="com.jxdinfo.salary.position.model.Position"
                     column="OLD_POSITION_ID" select="getOldPositionByPositionId"/>
        <association property="newPosition" javaType="com.jxdinfo.salary.position.model.Position"
                     column="NEW_POSITION_ID" select="getNewPositionByPositionId"/>
    </resultMap>


    <!-- 关联查询员工 -->
    <select id="getOperatorById" resultMap="com.jxdinfo.salary.staff.dao.StaffMapper.BaseResultMap">
        select * from t_staff where STAFF_ID=#{operatorId}
    </select>
    <select id="getMoveById" resultMap="com.jxdinfo.salary.staff.dao.StaffMapper.BaseResultMap">
        select * from t_staff where STAFF_ID=#{moveId}
    </select>

    <!-- 关联查询部门 -->
    <select id="getOldDepartmentByDepartmentId" resultMap="com.jxdinfo.salary.department.dao.DepartmentMapper.BaseResultMap">
        select * from t_department where DEPARTMENT_ID=#{oldDepartmentId}
    </select>
    <select id="getNewDepartmentByDepartmentId" resultMap="com.jxdinfo.salary.department.dao.DepartmentMapper.BaseResultMap">
        select * from t_department where DEPARTMENT_ID=#{newDepartmentId}
    </select>

    <!-- 关联查询职位 -->
    <select id="getOldPositionByPositionId" resultMap="com.jxdinfo.salary.position.dao.PositionMapper.BaseResultMap">
        select * from t_position where POSITION_ID=#{oldPositionId}
    </select>
    <select id="getNewPositionByPositionId" resultMap="com.jxdinfo.salary.position.dao.PositionMapper.BaseResultMap">
        select * from t_position where POSITION_ID=#{newPositionId}
    </select>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        OPERATION_ID AS operationId, OPERATOR_ID AS operatorId,
        MOVE_ID AS moveId, OLD_DEPARTMENT_ID AS oldDepartmentId,
        NEW_DEPARTMENT_ID AS newDepartmentId, OLD_POSITION_ID AS oldPositionId,
        NEW_POSITION_ID AS newPositionId, OPERATION_TIME AS operationTime
    </sql>

    <!-- 分页查询 -->
    <select id="selectPage" resultMap="WithRefResultMap">
        select * from t_move_log
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 分页查询 -->
    <select id="selectByDidPage" resultMap="WithRefResultMap">
        select * from t_move_log
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!--按操作编码查询-->
    <select id="selectOperationId" resultType="int">
        select distinct OPERATION_ID from t_move_log
    </select>

    <!--按操作员工号查询-->
    <select id="selectOperatorId" resultType="int">
        select distinct OPERATOR_ID from t_move_log
    </select>

    <!--按操作员姓名查询-->
    <select id="selectOperatorName" resultType="string">
        select DISTINCT STAFF_NAME
        from t_move_log a,t_staff b
        where a.OPERATOR_ID = b.STAFF_ID
    </select>

    <!--按调动员工工号查询-->
    <select id="selectMoveId" resultType="int">
        select distinct MOVE_ID from t_move_log
    </select>

    <!--按调动员工姓名查询-->
    <select id="selectMoveName" resultType="string">
        select DISTINCT STAFF_NAME
        from t_move_log a,t_staff b
        where a.MOVE_ID = b.STAFF_ID
    </select>

    <!--按原部门查询-->
    <select id="selectOldDepartmentName" resultType="string">
        select distinct DEPARTMENT_NAME
        from t_move_log a, t_department b
        where a.OLD_DEPARTMENT_ID = b.DEPARTMENT_ID
    </select>

    <!--按原职位查询-->
    <select id="selectOldPositionName" resultType="string">
        select distinct POSITION_NAME
        from t_move_log a, t_position b
        where a.OLD_POSITION_ID = b.POSITION_ID
    </select>

    <!--按新部门查询-->
    <select id="selectNewDepartmentName" resultType="string">
        select distinct DEPARTMENT_NAME
        from t_move_log a, t_department b
        where a.NEW_DEPARTMENT_ID = b.DEPARTMENT_ID
    </select>

    <!--按新职位查询-->
    <select id="selectNewPositionName" resultType="string">
        select distinct POSITION_NAME
        from t_move_log a, t_position b
        where a.NEW_POSITION_ID = b.POSITION_ID
    </select>

    <!--按操作时间查询-->
    <select id="selectOperationTime" resultType="string">
        select distinct OPERATION_TIME from t_move_log
    </select>

    <!-- 查询最大操作ID的记录 -->
    <select id="selectMaxOperationId" resultMap="BaseResultMap">
        select * from t_move_log
        where OPERATION_ID REGEXP CONCAT('^',#{time},'0[0-9]{3}$') and OPERATION_ID >= all(
            select OPERATION_ID from t_move_log
            where OPERATION_ID REGEXP CONCAT('^',#{time},'0[0-9]{3}$')
        )
    </select>

    <!-- 插入 -->
    <insert id="insert">
        insert into t_move_log(OPERATION_ID,OPERATOR_ID,MOVE_ID,OLD_DEPARTMENT_ID,
                               NEW_DEPARTMENT_ID,OLD_POSITION_ID,NEW_POSITION_ID,OPERATION_TIME)
        values (#{operationId},#{operator.staffId},#{move.staffId},#{oldDepartment.departmentId},
                #{newDepartment.departmentId},#{oldPosition.positionId},#{newPosition.positionId},#{operationTime})
    </insert>

    <!-- 更新-->
    <update id="updateById">
        update t_move_log
        set OPERATOR_ID = #{et.operator.staffId},
            MOVE_ID = #{et.move.staffId},
            OLD_DEPARTMENT_ID = #{et.oldDepartment.departmentId},
            NEW_DEPARTMENT_ID = #{et.newDepartment.departmentId},
            OLD_POSITION_ID = #{et.oldPosition.positionId},
            NEW_POSITION_ID = #{et.newPosition.positionId},
            OPERATION_TIME = #{et.operationTime}
        where OPERATION_ID = #{et.operationId}
    </update>

    <!--模糊查询-->
    <select id="likeSelect" resultMap="WithRefResultMap" parameterType="string">
        select a.OPERATION_ID,a.OPERATOR_ID,b.STAFF_NAME,a.MOVE_ID,c.STAFF_NAME,
        d.DEPARTMENT_NAME,e.POSITION_NAME,f.DEPARTMENT_NAME,g.POSITION_NAME,a.OPERATION_TIME
        ,d.DEPARTMENT_ID as OLD_DEPARTMENT_ID, f.DEPARTMENT_ID as NEW_DEPARTMENT_ID,
        e.POSITION_ID as OLD_POSITION_ID, g.POSITION_NAME  as NEW_POSITION_ID
        from t_move_log a,t_staff b,t_staff c,t_department d,
             t_position e,t_department f,t_position g
        <where>
            a.OPERATOR_ID = b.STAFF_ID and a.MOVE_ID = c.STAFF_ID
            and a.OLD_DEPARTMENT_ID = d.DEPARTMENT_ID and a.OLD_POSITION_ID = e.POSITION_ID
            and a.NEW_DEPARTMENT_ID = f.DEPARTMENT_ID and a.NEW_POSITION_ID = g.POSITION_ID
            <if test="condition1 != null and condition1 != '' ">
                and a.OPERATION_ID like concat(concat("%",#{condition1}),"%")
            </if>
            <if test="condition2 != null and condition2 != '' ">
                and ( b.STAFF_NAME like concat(concat("%",#{condition2}),"%")
                or a.OPERATOR_ID like concat(concat("%",#{condition2}),"%"))
            </if>
            <if test="condition3 != null and condition3 != '' ">
                and ( c.STAFF_NAME like concat(concat("%",#{condition3}),"%")
                or a.MOVE_ID like concat(concat("%",#{condition3}),"%"))
            </if>
        </where>
    </select>


</mapper>
