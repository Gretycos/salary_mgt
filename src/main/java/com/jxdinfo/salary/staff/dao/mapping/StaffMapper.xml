<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxdinfo.salary.staff.dao.StaffMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jxdinfo.salary.staff.model.Staff">
        <id column="STAFF_ID" property="staffId" />
        <result column="STAFF_NAME" property="staffName" />
        <result column="GENDER" property="gender" />
        <result column="ENTRY_TIME" property="entryTime" />
        <result column="DEPARTURE_TIME" property="departureTime" />
    </resultMap>

    <!-- 通用查询映射结果，不需要性别、入职时间、离职时间 -->
    <resultMap id="WithIDNameResultMap" type="com.jxdinfo.salary.staff.model.Staff">
        <id column="STAFF_ID" property="staffId" />
        <result column="STAFF_NAME" property="staffName" />
    </resultMap>

    <!-- 带关联查询映射结果 -->
    <resultMap id="WithRefResultMap" type="com.jxdinfo.salary.staff.model.Staff" extends="BaseResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="department" javaType="com.jxdinfo.salary.department.model.Department"
                     resultMap="com.jxdinfo.salary.department.dao.DepartmentMapper.BaseResultMap" />
        <association property="position" javaType="com.jxdinfo.salary.position.model.Position"
                     resultMap="com.jxdinfo.salary.position.dao.PositionMapper.BaseResultMap"/>
    </resultMap>

    <!-- 带关联查询映射结果 -->
    <resultMap id="WithRefResultMap2" type="com.jxdinfo.salary.staff.model.Staff" extends="WithIDNameResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="department" javaType="com.jxdinfo.salary.department.model.Department"
                     column="DEPARTMENT_ID" select="getDepartmentByDepartmentId"/>
        <association property="position" javaType="com.jxdinfo.salary.position.model.Position"
                     column="POSITION_ID" select="getPositionByPositionId"/>
    </resultMap>

    <!-- 带部门查询映射结果 -->
    <resultMap id="WithDepResultMap" type="com.jxdinfo.salary.staff.model.Staff" extends="BaseResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="department" javaType="com.jxdinfo.salary.department.model.Department"
                     column="DEPARTMENT_ID" select="getDepartmentByDepartmentId"/>
    </resultMap>

    <!-- 带职位查询映射结果 -->
    <resultMap id="WithPosResultMap" type="com.jxdinfo.salary.staff.model.Staff" extends="BaseResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="position" javaType="com.jxdinfo.salary.position.model.Position"
                     column="POSITION_ID" select="getPositionByPositionId"/>
    </resultMap>

    <!-- 关联查询部门 -->
    <select id="getDepartmentByDepartmentId" resultMap="com.jxdinfo.salary.department.dao.DepartmentMapper.BaseResultMap">
        select * from t_department where DEPARTMENT_ID=#{departmentId}
    </select>

    <!-- 关联查询职位 -->
    <select id="getPositionByPositionId" resultMap="com.jxdinfo.salary.position.dao.PositionMapper.BaseResultMap">
        select * from t_position where POSITION_ID=#{positionId}
    </select>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        STAFF_ID AS staffId, STAFF_NAME AS staffName, GENDER AS gender, DEPARTMENT_ID AS departmentId, POSITION_ID AS positionId, ENTRY_TIME AS entryTime, DEPARTURE_TIME AS departureTime
    </sql>

    <!-- 分页查询 -->
    <select id="selectPage" resultMap="WithRefResultMap">
        select *
        from t_staff s natural join t_department natural join t_position
        <where>
            ${ew.sqlSegment}
        </where>
        order by DEPARTMENT_ID,POSITION_ID,STAFF_ID asc
    </select>

    <!-- 查询单个人 -->
    <select id="selectOne" resultMap="WithRefResultMap">
        select * from(
        select * from t_staff
        <where>
            ${ew.sqlSegment}
        </where>
        ) t1 natural join t_department natural join t_position
    </select>

    <!-- 查询单个人 -->
    <select id="selectById" resultMap="WithRefResultMap">
        select * from (
        select * from t_staff
        where STAFF_ID = #{var1}
        ) t1 natural join t_department natural join t_position
    </select>

    <!-- 查询员工列表 -->
    <select id="selectList" resultMap="WithRefResultMap">
        select *
        from t_staff s natural join t_department natural join t_position
        <where>
            ${ew.sqlSegment}
        </where>
        order by DEPARTMENT_ID,POSITION_ID,STAFF_ID asc
    </select>

    <!-- 查询部门标号下最大的员工ID -->
    <select id="selectMaxStaffIdByDid" resultType="int">
        select max(STAFF_ID)
        from t_staff
        where STAFF_ID REGEXP CONCAT('^[0-9]{4}',#{departmentId},'[0-9]{4}$')
    </select>


    <!-- 插入 -->
    <insert id="insert">
        insert into t_staff(STAFF_ID,STAFF_NAME,GENDER,DEPARTMENT_ID,POSITION_ID,ENTRY_TIME)
        values (#{staffId},#{staffName},#{gender},#{department.departmentId},#{position.positionId},#{entryTime})
    </insert>

    <!-- 更新-->
    <update id="updateById">
        update t_staff
        set STAFF_NAME = #{et.staffName},
            GENDER = #{et.gender},
            DEPARTMENT_ID = #{et.department.departmentId},
            POSITION_ID = #{et.position.positionId},
            DEPARTURE_TIME = #{et.departureTime}
        where STAFF_ID = #{et.staffId}
    </update>

    <!-- 查询下拉性别-->
    <select id="getGenderSet" resultType="String">
        select distinct GENDER from t_staff s
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 查询下拉部门-->
    <select id="getDepartmentSet" resultMap="com.jxdinfo.salary.department.dao.DepartmentMapper.BaseResultMap">
        select distinct s.DEPARTMENT_ID, d.DEPARTMENT_NAME
        from t_staff s left join t_department d on (s.DEPARTMENT_ID=d.DEPARTMENT_ID)
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 查询下拉职位-->
    <select id="getPositionSet" resultMap="com.jxdinfo.salary.position.dao.PositionMapper.BaseResultMap">
        select distinct s.POSITION_ID, p.POSITION_NAME
        from t_staff s left join t_position p on (s.POSITION_ID=p.POSITION_ID)
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 查询下拉入职时间-->
    <select id="getEntryTimeSet" resultType="String">
        select distinct DATE_FORMAT(ENTRY_TIME,'%Y-%m')
        from t_staff s
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 查询下拉离职时间-->
    <select id="getDepartureTimeSet" resultType="String">
        select distinct DATE_FORMAT(DEPARTURE_TIME,'%Y-%m')
        from t_staff s
        <where>
            DEPARTURE_TIME is not null
            ${ew.sqlSegment}
        </where>
    </select>
</mapper>
