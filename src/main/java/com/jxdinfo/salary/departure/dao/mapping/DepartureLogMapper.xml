<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxdinfo.salary.departure.dao.DepartureLogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jxdinfo.salary.departure.model.DepartureLog">
        <id column="OPERATION_ID" property="operationId" />
        <result column="OPERATION_TIME" property="operationTime" />
    </resultMap>

    <!-- 带关联查询映射结果 -->
<!--    <resultMap id="WithRefResultMap" type="com.jxdinfo.salary.departure.model.DepartureLog" extends="BaseResultMap">-->
<!--        &lt;!&ndash;association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名&ndash;&gt;-->
<!--        <association property="operator" javaType="com.jxdinfo.salary.staff.model.Staff"-->
<!--                     column="OPERATOR_ID" select="getOperatorById"/>-->
<!--        <association property="departure" javaType="com.jxdinfo.salary.staff.model.Staff"-->
<!--                     column="DEPARTURE_ID" select="getDepartureById"/>-->
<!--    </resultMap>-->
    <resultMap id="WithRefResultMap" type="com.jxdinfo.salary.departure.model.DepartureLog" extends="BaseResultMap">
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="operator" javaType="com.jxdinfo.salary.staff.model.Staff"
                     resultMap="OperatorResultMap"/>
        <association property="departure" javaType="com.jxdinfo.salary.staff.model.Staff"
                     resultMap="DepartureResultMap"/>
    </resultMap>

    <!-- 关联查询操作员 -->
    <resultMap id="OperatorResultMap" type="com.jxdinfo.salary.staff.model.Staff">
        <id column="OPERATOR_ID" property="staffId" />
        <result column="OPERATOR_NAME" property="staffName" />
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="department" javaType="com.jxdinfo.salary.department.model.Department"
                     resultMap="OperatorDepartmentResultMap"/>
        <association property="position" javaType="com.jxdinfo.salary.position.model.Position"
                     resultMap="OperatorPositionResultMap"/>
    </resultMap>
    <resultMap id="OperatorDepartmentResultMap" type="com.jxdinfo.salary.department.model.Department">
        <id column="OPERATOR_DEPARTMENT_ID" property="departmentId" />
        <result column="OPERATOR_DEPARTMENT_NAME" property="departmentName" />
    </resultMap>
    <resultMap id="OperatorPositionResultMap" type="com.jxdinfo.salary.position.model.Position">
        <id column="OPERATOR_POSITION_ID" property="positionId" />
        <result column="OPERATOR_POSITION_NAME" property="positionName" />
    </resultMap>


    <!-- 关联查询离职人员 -->
    <resultMap id="DepartureResultMap" type="com.jxdinfo.salary.staff.model.Staff">
        <id column="DEPARTURE_ID" property="staffId" />
        <result column="DEPARTURE_NAME" property="staffName" />
        <!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名-->
        <association property="department" javaType="com.jxdinfo.salary.department.model.Department"
                     resultMap="DepartureDepartmentResultMap"/>
        <association property="position" javaType="com.jxdinfo.salary.position.model.Position"
                     resultMap="DeparturePositionResultMap"/>
    </resultMap>
    <resultMap id="DepartureDepartmentResultMap" type="com.jxdinfo.salary.department.model.Department">
        <id column="DEPARTURE_DEPARTMENT_ID" property="departmentId" />
        <result column="DEPARTURE_DEPARTMENT_NAME" property="departmentName" />
    </resultMap>
    <resultMap id="DeparturePositionResultMap" type="com.jxdinfo.salary.position.model.Position">
        <id column="DEPARTURE_POSITION_ID" property="positionId" />
        <result column="DEPARTURE_POSITION_NAME" property="positionName" />
    </resultMap>

    <!-- 关联查询员工 -->
    <select id="getOperatorById" resultMap="com.jxdinfo.salary.staff.dao.StaffMapper.WithRefResultMap2">
        select * from t_staff where STAFF_ID=#{operatorId}
    </select>
    <select id="getDepartureById" resultMap="com.jxdinfo.salary.staff.dao.StaffMapper.WithRefResultMap2">
        select * from t_staff where STAFF_ID=#{departureId}
    </select>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        OPERATION_ID AS operationId, OPERATOR_ID AS operatorId, DEPARTURE_ID AS departureId, OPERATION_TIME AS operationTime
    </sql>

    <!-- 分页查询 -->
    <select id="selectPage" resultMap="WithRefResultMap">
        select * from t_departure_log
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 分页查询 -->
    <select id="selectByDidPage" resultMap="WithRefResultMap">
        select * from t_departure_log
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <!--模糊查询-->
    <select id="likeSelect" resultMap="WithRefResultMap">
        select a.OPERATION_ID,a.OPERATOR_ID,a.DEPARTURE_ID,a.OPERATION_TIME
        from t_departure_log a left join t_staff b on a.OPERATOR_ID=b.STAFF_ID left join t_staff c on a.DEPARTURE_ID = c.STAFF_ID
        <where>
            1 = 1
            <if test="condition1 != null and condition1 != '' ">
                and a.OPERATION_ID like concat(concat("%",#{condition1}),"%")
            </if>
            <if test="condition2 != null and condition2 != '' ">
                and( b.STAFF_NAME like concat(concat("%",#{condition2}),"%")
                or a.OPERATOR_ID like concat(concat("%",#{condition2}),"%"))
            </if>
            <if test="condition3 != null and condition3 != '' ">
                and( c.STAFF_NAME like concat(concat("%",#{condition3}),"%")
                or a.DEPARTURE_ID like concat(concat("%",#{condition3}),"%"))
            </if>
        </where>
    </select>

    <!--带筛选的模糊查询-->
<!--    <select id="likeSelectByCondition" resultMap="WithRefResultMap">-->
<!--        select a.OPERATION_ID,a.OPERATOR_ID,a.DEPARTURE_ID,a.OPERATION_TIME-->
<!--        from t_departure_log a left join t_staff b on a.OPERATOR_ID=b.STAFF_ID left join t_staff c on a.DEPARTURE_ID=c.STAFF_ID-->
<!--        <where>-->
<!--            1 = 1-->
<!--            <if test="condition1 != null and condition1 != '' ">-->
<!--                and a.OPERATION_ID like concat(concat("%",#{condition1}),"%")-->
<!--            </if>-->
<!--            <if test="condition2 != null and condition2 != '' ">-->
<!--                and( b.STAFF_NAME like concat(concat("%",#{condition2}),"%")-->
<!--                or a.OPERATOR_ID like concat(concat("%",#{condition2}),"%"))-->
<!--            </if>-->
<!--            <if test="condition3 != null and condition3 != '' ">-->
<!--                and( c.STAFF_NAME like concat(concat("%",#{condition3}),"%")-->
<!--                or a.DEPARTURE_ID like concat(concat("%",#{condition3}),"%"))-->
<!--            </if>-->
<!--            ${ew.sqlSegment}-->
<!--        </where>-->
<!--    </select>-->
    <select id="likeSelectByCondition" resultMap="WithRefResultMap">
        select a.OPERATION_ID,
        b.STAFF_ID OPERATOR_ID,
        b.STAFF_NAME OPERATOR_NAME,
        b.DEPARTMENT_ID OPERATOR_DEPARTMENT_ID,
        b.POSITION_ID OPERATOR_POSITION_ID,
        d.DEPARTMENT_NAME OPERATOR_DEPARTMENT_NAME,
        e.POSITION_NAME OPERATOR_POSITION_NAME,
        c.STAFF_ID DEPARTURE_ID,
        c.STAFF_NAME DEPARTURE_NAME,
        c.DEPARTMENT_ID DEPARTURE_DEPARTMENT_ID,
        c.POSITION_ID DEPARTURE_POSITION_ID,
        f.DEPARTMENT_NAME DEPARTURE_DEPARTMENT_NAME,
        g.POSITION_NAME DEPARTURE_POSITION_NAME,
        a.OPERATION_TIME
        from t_departure_log a left join t_staff b on a.OPERATOR_ID=b.STAFF_ID left join t_staff c on a.DEPARTURE_ID=c.STAFF_ID
        left join t_department d on b.DEPARTMENT_ID=d.DEPARTMENT_ID left join t_position e on b.POSITION_ID=e.POSITION_ID
        left join t_department f on c.DEPARTMENT_ID=f.DEPARTMENT_ID left join t_position g on c.POSITION_ID=g.POSITION_ID
        <where>
            1 = 1
            <if test="condition1 != null and condition1 != '' ">
                and a.OPERATION_ID like concat(concat("%",#{condition1}),"%")
            </if>
            <if test="condition2 != null and condition2 != '' ">
                and( b.STAFF_NAME like concat(concat("%",#{condition2}),"%")
                or a.OPERATOR_ID like concat(concat("%",#{condition2}),"%"))
            </if>
            <if test="condition3 != null and condition3 != '' ">
                and( c.STAFF_NAME like concat(concat("%",#{condition3}),"%")
                or a.DEPARTURE_ID like concat(concat("%",#{condition3}),"%"))
            </if>
            ${ew.sqlSegment}
        </where>
    </select>

    <!-- 查询最大操作ID的记录 -->
    <select id="selectMaxOperationId" resultMap="BaseResultMap">
        select * from t_departure_log
        where OPERATION_ID REGEXP CONCAT('^',#{time},'2[0-9]{3}$') and OPERATION_ID >= all(
            select OPERATION_ID from t_departure_log
            where OPERATION_ID REGEXP CONCAT('^',#{time},'2[0-9]{3}$')
        )
    </select>

    <!-- 插入 -->
    <insert id="insert">
        insert into t_departure_log(OPERATION_ID,OPERATOR_ID,DEPARTURE_ID,OPERATION_TIME)
        values (#{operationId},#{operator.staffId},#{departure.staffId},#{operationTime})
    </insert>

    <!-- 更新-->
    <update id="updateById">
        update t_departure_log
        set OPERATOR_ID = #{et.operator.staffId},
            DEPARTURE_ID = #{et.departure.staffId},
            OPERATION_TIME = #{et.operationTime}
        where OPERATION_ID = #{et.operationId}
    </update>




</mapper>
